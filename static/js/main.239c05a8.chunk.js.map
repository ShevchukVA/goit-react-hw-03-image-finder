{"version":3,"sources":["components/SearchBar.js","components/Loader.js","components/Notification.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Modal.js","components/Button.js","api/imagesApi.js","App.js","index.js"],"names":["SearchBar","state","inputValue","handleInput","event","setState","target","value","handleSubmit","preventDefault","onSubmit","props","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","Spinner","color","height","width","defaultProps","Notification","message","massage","ImageGalleryItem","name","urlToImg","urlToLargeImg","onUpdateImg","src","alt","onClick","ImageGallery","images","onUpdateImages","map","id","tags","webformatURL","largeImageURL","key","Modal","handleKeyDown","code","onCloseModal","window","addEventListener","removeEventListener","currentTarget","children","Button","onUpdateButton","fetchImagesFromApi","searchQuery","page","requestParams","axios","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","App","loading","error","largeImgUrl","fetchImages","getFromApi","prevState","catch","finally","handleSearchFormSubmit","query","handleLargeImg","url","handleCloseModal","prevProps","length","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.239c05a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleInput = event => {\r\n    this.setState({ inputValue: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { onSubmit } = this.props;\r\n\r\n    onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <label>\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              onChange={this.handleInput}\r\n              value={inputValue}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            />\r\n          </label>\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => {\r\n  return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />;\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  type: 'Audio',\r\n  color: '000000',\r\n  height: 80,\r\n  width: 80,\r\n};\r\n\r\nSpinner.propTypes = {\r\n  type: PropTypes.string,\r\n  color: PropTypes.string,\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = message => {\r\n  return <div>{message}</div>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  massage: 'Whoops, something went wrong',\r\n};\r\n\r\nNotification.propTypes = {\r\n  massage: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nconst ImageGalleryItem = ({ name, urlToImg, urlToLargeImg, onUpdateImg }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={urlToImg}\r\n        alt={name}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onUpdateImg(urlToLargeImg)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n  name: 'picture',\r\n  urlToImg:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n  urlToLargeImg:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  name: PropTypes.string,\r\n  urlToImg: PropTypes.string,\r\n  urlToLargeImg: PropTypes.string,\r\n  onUpdateImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport '../styles.css';\r\n\r\nconst ImageGallery = ({ images, onUpdateImages }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, tags, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          name={tags}\r\n          urlToImg={webformatURL}\r\n          urlToLargeImg={largeImageURL}\r\n          onUpdateImg={onUpdateImages}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.defaultProps = {\r\n  tags: 'picture',\r\n  webformatURL:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n  largeImageURL:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onUpdateImages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"Overlay\"\r\n        onClick={event => {\r\n          if (event.target === event.currentTarget) {\r\n            this.props.onCloseModal();\r\n          }\r\n        }}\r\n      >\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nconst Button = ({ onUpdateButton }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onUpdateButton}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onUpdateButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst keyApi = '18661851-33f15e0f8577d5b4d35fae430';\r\nconst baseUrl = 'https://pixabay.com/api/';\r\n\r\nconst fetchImagesFromApi = (searchQuery, page) => {\r\n  const requestParams = `?q=${searchQuery}&page=${page}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return axios\r\n    .get(baseUrl + requestParams)\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nfetchImagesFromApi.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\nexport default {\r\n  fetchImagesFromApi,\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport SearchBar from './components/SearchBar';\r\nimport Loader from './components/Loader';\r\nimport Notification from './components/Notification';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\nimport Button from './components/Button';\r\n\r\nimport getFromApi from './api/imagesApi';\r\nimport './styles.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    page: 1,\r\n    searchQuery: '',\r\n    error: null,\r\n    largeImgUrl: null,\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n    getFromApi\r\n      .fetchImagesFromApi(searchQuery, page)\r\n      .then(images =>\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          page: prevState.page + 1,\r\n        })),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = query => {\r\n    this.setState({ searchQuery: query, page: 1, images: [] });\r\n  };\r\n\r\n  handleLargeImg = url => {\r\n    this.setState({ largeImgUrl: url });\r\n  };\r\n\r\n  handleCloseModal = () => this.setState({ largeImgUrl: null });\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { images, searchQuery } = this.state;\r\n\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    if (prevState.images.length !== images.length) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { images, loading, error, largeImgUrl } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          {error && (\r\n            <Notification\r\n              message={`Whoops, something went wrong: ${error.message}`}\r\n            />\r\n          )}\r\n          <SearchBar onSubmit={this.handleSearchFormSubmit} />\r\n          {images.length > 0 && (\r\n            <ImageGallery\r\n              images={images}\r\n              onUpdateImages={this.handleLargeImg}\r\n            />\r\n          )}\r\n          {largeImgUrl && (\r\n            <Modal onCloseModal={this.handleCloseModal}>\r\n              <img className=\"Modal-img\" src={largeImgUrl} alt=\"largeImage\" />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <div className=\"Button-box\">\r\n          {loading && <Loader />}\r\n          {images.length > 0 && !loading && (\r\n            <Button onUpdateButton={this.fetchImages} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}